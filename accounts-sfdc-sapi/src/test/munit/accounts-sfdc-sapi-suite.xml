<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="accounts-sfdc-sapi-suite.xml" />
	<munit:test name="accounts-sfdc-sapi-main-test" doc:id="fb1ce727-ce54-478c-a7b6-79c3a61274b2" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Listener" doc:id="13e0fe90-6063-41eb-90bf-187acdfd2c2f" processor="http:listener">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-sfdc-sapi-httpListenerConfig" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/api/*" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Apikit Router" doc:id="6e0c76b9-7331-4f33-8b1f-680c6cc9155a" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-sfdc-sapi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="ab605174-66f9-4e9a-8ed1-e74632620fae" >
				<munit:payload value="#[readUrl('classpath://accountssfdcsapimaintest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://accountssfdcsapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-sfdc-sapi-main" doc:id="f8973bea-e667-4bb6-8046-910a19cba02d" name="accounts-sfdc-sapi-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2f447c08-51a3-4b2c-9af6-8463626ab4f7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import accountssfdcsapimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-sfdc-sapi-console-test" doc:id="d78d986a-d992-41d9-8686-22e70c27a8b6" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Listener" doc:id="da59ba60-ced9-47f7-a2eb-15961473a904" processor="http:listener">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-sfdc-sapi-httpListenerConfig" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/console/*" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Apikit Console" doc:id="b3b2287f-e3e8-43b1-94c2-babb19f67cf6" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-sfdc-sapi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="ae9c6697-2a98-47ba-916b-6b2236e61fae" >
				<munit:payload value="#[readUrl('classpath://accountssfdcsapiconsoletest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://accountssfdcsapiconsoletest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-sfdc-sapi-console" doc:id="23543ee6-fc03-46f6-811e-77ad659b7257" name="accounts-sfdc-sapi-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ce3e4d70-4df8-428a-b9d2-da7cde71b4a0" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import accountssfdcsapiconsoletest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\accounts\(account_id):accounts-sfdc-sapi-config-test" doc:id="4df03527-dee4-44a8-a2fc-554314f598ef" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="68aecd80-45b8-4289-9718-0dc1a9a554f6" >
				<munit:payload value="#[readUrl('classpath://getaccountsaccountidaccountssfdcsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getaccountsaccountidaccountssfdcsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getaccountsaccountidaccountssfdcsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\accounts\(account_id):accounts-sfdc-sapi-config" doc:id="e7da5505-39f5-4a97-b59c-b84b08a568f8" name="get:\accounts\(account_id):accounts-sfdc-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="4fed1c32-ed27-4f65-8977-8275db03a792" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getaccountsaccountidaccountssfdcsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\accounts:application\json:accounts-sfdc-sapi-config-test" doc:id="6ba31699-a8de-450c-8dd9-c70aa51f6c8a" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="3f372910-881d-45da-9260-c8ddb6a91abc" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://postaccountsapplicationjsonaccountssfdcsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://postaccountsapplicationjsonaccountssfdcsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postaccountsapplicationjsonaccountssfdcsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\accounts:application\json:accounts-sfdc-sapi-config" doc:id="6959efb8-dc83-4eae-ad28-12be02b8e870" name="post:\accounts:application\json:accounts-sfdc-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="6ee2722d-7962-4b8c-ae26-ea0f0249c6a5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postaccountsapplicationjsonaccountssfdcsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="delete:\accounts\(account_id):accounts-sfdc-sapi-config-test" doc:id="07c05b62-7e74-4fa0-9785-54ea9d8c1229" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="ff4bf76e-22cf-40cb-8569-2d14229a1607" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://deleteaccountsaccountidaccountssfdcsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://deleteaccountsaccountidaccountssfdcsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://deleteaccountsaccountidaccountssfdcsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to delete:\accounts\(account_id):accounts-sfdc-sapi-config" doc:id="47fd5f6b-5d38-46a7-b135-60297f05af44" name="delete:\accounts\(account_id):accounts-sfdc-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="648aad6a-d72a-48cf-884f-4329c72149e5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import deleteaccountsaccountidaccountssfdcsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="put:\accounts\(account_id):application\json:accounts-sfdc-sapi-config-test" doc:id="27bb299e-4265-4a2f-8663-a4336852e916">
		<munit:behavior>
			<munit:set-event doc:name="Set Input" doc:id="03b7d62f-594b-4c92-a316-c497f303be3b">
				<munit:payload value="#[output application/json  --- readUrl('classpath://putaccountsaccountidapplicationjsonaccountssfdcsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://putaccountsaccountidapplicationjsonaccountssfdcsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putaccountsaccountidapplicationjsonaccountssfdcsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to put:\accounts\(account_id):application\json:accounts-sfdc-sapi-config" doc:id="28fdf51a-33a3-47ed-b6a8-204de217ec69" name="put:\accounts\(account_id):application\json:accounts-sfdc-sapi-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload" doc:id="eb704210-f587-4587-ac50-b1eb2ff70ef8" message="The payload does not match">
				<munit-tools:that><![CDATA[#[%dw 2.0
import putaccountsaccountidapplicationjsonaccountssfdcsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
